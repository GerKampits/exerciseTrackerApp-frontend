{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction UserInsertComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 22)(2, \"div\", 23)(3, \"div\", 1)(4, \"label\", 24);\n    i0.ɵɵtext(5, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 23)(8, \"div\", 1)(9, \"label\", 26);\n    i0.ɵɵtext(10, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 28)(13, \"div\", 1)(14, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function UserInsertComponent_div_38_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removePhone(i_r2));\n    });\n    i0.ɵɵtext(15, \" Remove \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nexport class UserInsertComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.form = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      email: ['', Validators.required],\n      bodyMeasurements: this.fb.group({\n        height: ['', Validators.required],\n        weight: ['', Validators.required]\n      }),\n      phone: this.fb.array([this.initPhone()])\n    });\n  }\n  initPhone() {\n    return this.fb.group({\n      type: ['', Validators.required],\n      number: ['', [Validators.required, Validators.minLength(10)]]\n    });\n  }\n  get phoneControls() {\n    return this.form.get('phone').controls;\n  }\n  addPhone() {\n    const phones = this.form.get('phone');\n    phones.push(this.initPhone());\n  }\n  removePhone(index) {\n    const phones = this.form.get('phone');\n    phones.removeAt(index);\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      console.log(this.form.value);\n      // const user = this.form.value as User;\n      // this.service.insertUser(user).subscribe((response)=> {\n      //   console.log(response);\n      // })\n    } else {\n      console.log('Form is not valid');\n    }\n  }\n}\nUserInsertComponent.ɵfac = function UserInsertComponent_Factory(t) {\n  return new (t || UserInsertComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nUserInsertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserInsertComponent,\n  selectors: [[\"app-user-insert\"]],\n  decls: 44,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"surname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"surname\", \"formControlName\", \"surname\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"formGroupName\", \"address\"], [\"for\", \"height\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"height\", \"formControlName\", \"height\", 1, \"form-control\"], [\"for\", \"weight\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"weight\", \"formControlName\", \"weight\", 1, \"form-control\"], [\"formArrayName\", \"phone\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [3, \"formGroupName\"], [1, \"row\"], [1, \"col-md-5\"], [\"for\", \"type\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"type\", \"formControlName\", \"type\", 1, \"form-control\"], [\"for\", \"number\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"number\", \"formControlName\", \"number\", 1, \"form-control\"], [1, \"col-md-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"mt-4\", 3, \"click\"]],\n  template: function UserInsertComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"h2\");\n      i0.ɵɵtext(2, \"User Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UserInsertComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 1)(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 10);\n      i0.ɵɵtext(22, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 12)(25, \"h4\");\n      i0.ɵɵtext(26, \"Body Measurements\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 1)(28, \"label\", 13);\n      i0.ɵɵtext(29, \"Height\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 1)(32, \"label\", 15);\n      i0.ɵɵtext(33, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"h4\");\n      i0.ɵɵtext(36, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 17);\n      i0.ɵɵtemplate(38, UserInsertComponent_div_38_Template, 16, 1, \"div\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 1)(40, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function UserInsertComponent_Template_button_click_40_listener() {\n        return ctx.addPhone();\n      });\n      i0.ɵɵtext(41, \" Add Phone \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"button\", 20);\n      i0.ɵɵtext(43, \" Submit \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(35);\n      i0.ɵɵproperty(\"ngForOf\", ctx.phoneControls);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UserInsertComponent","constructor","fb","form","group","username","required","minLength","password","name","surname","email","bodyMeasurements","height","weight","phone","array","initPhone","type","number","phoneControls","get","controls","addPhone","phones","push","removePhone","index","removeAt","onSubmit","valid","console","log","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Asus\\exercisetracker-frontend\\src\\app\\user\\user-insert\\user-insert.component.ts","C:\\Users\\Asus\\exercisetracker-frontend\\src\\app\\user\\user-insert\\user-insert.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-insert',\n  templateUrl: './user-insert.component.html',\n  styleUrls: ['./user-insert.component.css']\n})\nexport class UserInsertComponent {\n\nform: FormGroup;\n\n  constructor(private fb:FormBuilder) {\n    this.form = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      email: ['', Validators.required],\n      bodyMeasurements: this.fb.group({\n        height: ['', Validators.required],\n        weight: ['', Validators.required],\n      }),\n      phone: this.fb.array([this.initPhone()])\n    })\n\n    \n  }\n\n  initPhone(): FormGroup {\n    return this.fb.group({\n      type: ['', Validators.required],\n      number: ['', [Validators.required, Validators.minLength(10)]]\n    })\n  }\n\n\n  get phoneControls() {\n    return (this.form.get('phone') as FormArray).controls\n  }\n\n  addPhone(): void {\n    const phones = this.form.get('phone') as FormArray;\n    phones.push(this.initPhone());\n  }\n\n  removePhone(index: number): void {\n    const phones = this.form.get('phone') as FormArray;\n    phones.removeAt(index);\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      console.log(this.form.value);\n      // const user = this.form.value as User;\n      // this.service.insertUser(user).subscribe((response)=> {\n      //   console.log(response);\n      // })\n    } else {\n      console.log('Form is not valid');\n    }\n  }\n}\n","<form>\n    <h2>User Form</h2>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"mb-3\">\n        <label for=\"username\" class=\"form-label\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"username\"\n          formControlName=\"username\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          formControlName=\"password\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"surname\" class=\"form-label\">Surname</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"surname\"\n          formControlName=\"surname\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          id=\"email\"\n          formControlName=\"email\"\n        />\n      </div>\n    \n      <div formGroupName=\"address\">\n        <h4>Body Measurements</h4>\n        <div class=\"mb-3\">\n          <label for=\"height\" class=\"form-label\">Height</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"height\"\n            formControlName=\"height\"\n          />\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"weight\" class=\"form-label\">Weight</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"weight\"\n            formControlName=\"weight\"\n          />\n        </div>\n      </div>\n    \n      <h4>Phone</h4>\n      <div formArrayName=\"phone\">\n        <div *ngFor=\"let phone of phoneControls; let i = index\" [formGroupName]=\"i\">\n          <div class=\"row\">\n            <div class=\"col-md-5\">\n              <div class=\"mb-3\">\n                <label for=\"type\" class=\"form-label\">Type</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"type\"\n                  formControlName=\"type\"\n                />\n              </div>\n            </div>\n            <div class=\"col-md-5\">\n              <div class=\"mb-3\">\n                <label for=\"number\" class=\"form-label\">Number</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"number\"\n                  formControlName=\"number\"\n                />\n              </div>\n            </div>\n            <div class=\"col-md-2\">\n              <div class=\"mb-3\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger mt-4\"\n                  (click)=\"removePhone(i)\"\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n    <div class=\"mb-3\">\n        <button type = \"button\" class=\"btn btn-primary\" (click)=\"addPhone()\">\n            Add Phone\n        </button>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!form.valid\">\n        Submit\n    </button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}